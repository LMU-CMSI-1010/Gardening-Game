import os
import pygame as pg

# Setup for assests and directories
if not pg.font:
    print("Warning, fonts disabled")
if not pg.mixer:
    print("Warning, sound disabled")


main_dir = os.path.split(os.path.abspath(__file__))[0]
data_dir = os.path.join(main_dir, "Assets")
    
#Creating a function to set a standard for loading and scaling an image
def load_image(name, colorkey=None, scale=1):
    fullname = os.path.join(data_dir, name)
    image = pg.image.load(fullname)
    image = image.convert()

    size = image.get_size()
    size = (size[0] * scale, size[1] * scale)
    image = pg.transform.scale(image, size)

    if colorkey is not None:
        if colorkey == -1:
            colorkey = image.get_at((0, 0))
        image.set_colorkey(colorkey, pg.RLEACCEL)
    return image, image.get_rect()


# classes for our game objects

#Setting up mouse sprite
class Mouse(pg.sprite.Sprite):
    def __init__(self):
        pg.sprite.Sprite.__init__(self)
        self.image , self.rect = load_image("Jason.png", -1)
        self.image = pg.transform.scale(self.image, (50,50))
        self.state = "Jason"
        


#Changing the mouse image based off of collison
    def water_pressed(self):
        self.image , self.rect = load_image("Water.png", -1)
        self.state = "Water"  

    def not_pressed(self):
        self.image , self.rect = load_image("Jason.png" , -1)
        self.state = "Jason" 
        
    def fertalize_pressed(self):
        self.image , self.rect = load_image("Fertalize.png", -1)
        self.state = "Fertalizer"  

    def seeds_pressed(self):
        self.image, self.rect = load_image("Plant.png", -1)
        self.state = "Seeds"

    def sell_pressed(self):
        self.image, self.rect = load_image("Sell.png", -1)
        self.state = "Sell"



      
    def update(self):
        pos = pg.mouse.get_pos()  
        self.rect.center = pos


 #Setting up classes that run as objects that players interact with       
class Water(pg.sprite.Sprite):
    
    def __init__(self,image,position):
        pg.sprite.Sprite.__init__(self)
        self.image, self.rect = load_image(image, -1)
        self.rect.center = position

class Fertalize(pg.sprite.Sprite):
    
    def __init__(self,image,position):
        pg.sprite.Sprite.__init__(self)
        self.image, self.rect = load_image(image, -1)
        self.rect.center = position

class Sell(pg.sprite.Sprite):
    
    def __init__(self,image,position):
        pg.sprite.Sprite.__init__(self)
        self.image, self.rect = load_image(image, -1)
        self.rect.center = position

class Plant(pg.sprite.Sprite):
    
    def __init__(self,image,position):
        pg.sprite.Sprite.__init__(self)
        self.image, self.rect = load_image(image, -1)
        self.rect.center = position

class Pots(pg.sprite.Sprite):
    
    def __init__(self,position):
        pg.sprite.Sprite.__init__(self)  # call Sprite initializer
        self.image , self.rect = load_image("empty_pot.png" , -1)
        print(self.image)
        self.image = pg.transform.scale(self.image, (300,300))
        self.growth_stage = 0
        self.score = 0
        screen = pg.display.get_surface()
        self.area = screen.get_rect()
        self.rect.center = position
        #Dictonary to make the growth stages line up with an accesable index
        self.growth_dict = {
        0:"empty_pot.png",
        1:"1.png",
        2:"2.png",
        3:"3.png"
        }

class Warning(pg.sprite.Sprite):
    
    def __init__(self,image,position):
        pg.sprite.Sprite.__init__(self)
        self.image, self.rect = load_image(image, -1)
        self.rect.center = position
        

def main():
    # Initialize Everything
    pg.init()
    screen = pg.display.set_mode((1000, 750), pg.SCALED)
    pg.display.set_caption("Gay Gardening")
    pg.mouse.set_visible(False)

    # Create The Background
    background = pg.Surface(screen.get_size())
    background = background.convert()
    background.fill((90,90,90))

    # Put Text On The Background, Centered
    if pg.font:
        font = pg.font.Font(None, 64)
        text = font.render("Gay Gardening Game", True, (255, 255, 255))
        textpos = text.get_rect(centerx=background.get_width() / 2, y=10)
        background.blit(text, textpos)
    
 

    

    # Display The Background
    screen.blit(background, (0, 0))
    pg.display.flip()

    # Prepare Game Objects
    pot_1 = Pots((250,650))
    pot_2 = Pots((550,650))
    pot_3 = Pots((850,650))
    water = Water("Water.png" , (200,200))
    fertalize = Fertalize("Fertalize.png",(400,200))
    plant = Plant("Plant.png",(600,200))
    sell = Sell("Sell.png",(800,200))
    mouse = Mouse()
    # scoreboard = Scoreboard((50,50))
   

 
    allsprites = pg.sprite.RenderPlain((pot_1 , pot_2 , pot_3 , water , fertalize , plant , sell , mouse))
    clock = pg.time.Clock()

    # Main Loop
    going = True
    while going:
        clock.tick(60)

        # Handle Input Events
        for event in pg.event.get():
            if event.type == pg.QUIT:
                going = False
            elif event.type == pg.KEYDOWN and event.key == pg.K_ESCAPE:
                going = False

        
            if event.type == pg.MOUSEBUTTONDOWN:
                
                pos = pg.mouse.get_pos()
                if pos[0] > 150 and pos[0] < 250:
                    if pos[1] > 150 and pos[1] < 250:
                        mouse.water_pressed()

                elif pos[0] > 292 and pos[0] < 508:
                    if pos[1] < 308 and pos[1] > 92:
                        mouse.fertalize_pressed()

                elif pos[0] > 459 and pos[0] < 741:
                    if pos[1] < 311 and pos[1] > 89:
                        mouse.seeds_pressed()
                
                elif pos[0] > 685 and pos[0] < 915:
                    if pos[1] > 93 and pos[1] < 307:
                        mouse.sell_pressed()
                
                else:
                    mouse.not_pressed()
                #Water on water warning




                if pos[0] > 41 and pos[0] < 459:
                     if pos[1] > 417 and pos[1] < 883:  
                        
                        if mouse.state == "Seeds" and pot_1.growth_stage == 0:
                            pot_1.growth_stage += 1
                            pot_1.image = load_image((pot_1.growth_dict[pot_1.growth_stage]) , -1)[0]
                            pot_1.image = pg.transform.scale(pot_1.image, (300,300))
                        
                        if mouse.state == "Fertalizer" and pot_1.growth_stage == 1:
                            pot_1.growth_stage += 1
                            pot_1.image = load_image((pot_1.growth_dict[pot_1.growth_stage]) , -1)[0]
                            pot_1.image = pg.transform.scale(pot_1.image, (300,300))

                        if mouse.state == "Water" and pot_1.growth_stage == 2:
                            pot_1.growth_stage += 1
                            pot_1.image = load_image((pot_1.growth_dict[pot_1.growth_stage]) , -1)[0]
                            pot_1.image = pg.transform.scale(pot_1.image, (300,300))

                        if mouse.state == "Sell" and pot_1.growth_stage == 3:
                            pot_1.growth_stage = 0
                            pot_1.score +=1
                            pot_1.image = load_image((pot_1.growth_dict[pot_1.growth_stage]) , -1)[0]
                            pot_1.image = pg.transform.scale(pot_1.image, (300,300))

                elif pos[0] > 341 and pos[0] < 759:
                    if pos[1] > 417 and pos[1] < 883:  
                        
                        if mouse.state == "Seeds" and pot_2.growth_stage == 0:
                                pot_2.growth_stage += 1
                                pot_2.image = load_image((pot_2.growth_dict[pot_2.growth_stage]) , -1)[0]
                                pot_2.image = pg.transform.scale(pot_2.image, (300,300))
                            
                        if mouse.state == "Fertalizer" and pot_2.growth_stage == 1:
                                pot_2.growth_stage += 1
                                pot_2.image = load_image((pot_2.growth_dict[pot_2.growth_stage]) , -1)[0]
                                pot_2.image = pg.transform.scale(pot_2.image, (300,300))

                        if mouse.state == "Water" and pot_2.growth_stage == 2:
                                pot_2.growth_stage += 1
                                pot_2.image = load_image((pot_2.growth_dict[pot_2.growth_stage]) , -1)[0]
                                pot_2.image = pg.transform.scale(pot_2.image, (300,300))

                        if mouse.state == "Sell" and pot_2.growth_stage == 3:
                                pot_2.growth_stage = 0
                                pot_2.score +=1
                                pot_2.image = load_image((pot_2.growth_dict[pot_2.growth_stage]) , -1)[0]
                                pot_2.image = pg.transform.scale(pot_2.image, (300,300))

                elif pos[0] > 641 and pos[0] < 1059:
                     if pos[1] > 417 and pos[1] < 883:  
                        
                        if mouse.state == "Seeds" and pot_3.growth_stage == 0:
                            pot_3.growth_stage += 1
                            pot_3.image = load_image((pot_3.growth_dict[pot_3.growth_stage]) , -1)[0]
                            pot_3.image = pg.transform.scale(pot_3.image, (300,300))
                        
                        if mouse.state == "Fertalizer" and pot_3.growth_stage == 1:
                            pot_3.growth_stage += 1
                            pot_3.image = load_image((pot_3.growth_dict[pot_3.growth_stage]) , -1)[0]
                            pot_3.image = pg.transform.scale(pot_3.image, (300,300))

                        if mouse.state == "Water" and pot_3.growth_stage == 2:
                            pot_3.growth_stage += 1
                            pot_3.image = load_image((pot_3.growth_dict[pot_3.growth_stage]) , -1)[0]
                            pot_3.image = pg.transform.scale(pot_3.image, (300,300))

                        if mouse.state == "Sell" and pot_3.growth_stage == 3:
                            pot_3.growth_stage = 0
                            pot_3.score += 1
                            pot_3.image = load_image((pot_3.growth_dict[pot_3.growth_stage]) , -1)[0]
                            pot_3.image = pg.transform.scale(pot_3.image, (300,300))
            score = pot_1.score + pot_2.score + pot_3.score
        # if event.type == pg.MOUSEBUTTONDOWN:
        #     pos = pg.mouse.get_pos()
        #     if pos[0] > 20 and pos[0] < 40:
        #         if pos[1] > 30 and pos[1] < 50:
        #             score = 0
                

            font = pg.font.Font('freesansbold.ttf', 20)
            def show_score(x, y):
                score_value = font.render("Score : " + str(score), True, (255, 255, 255))
                screen.blit(score_value, (x, y))

            # def restart(x, y):
            #     restart_score = font.render("Reset Score" , True , (255, 255, 255))
            #     screen.blit(restart_score, (x, y))
                
                        
              
                


                       
        
        
        mouse.update()

        # Draw Everything
        screen.blit(background, (0, 0))
        show_score(30, 10)
        # restart(30 , 40)
        allsprites.draw(screen)
        pg.display.flip()
        

    pg.quit()

# Game Over

# this calls the 'main' function when this script is executed
if __name__ == "__main__":
    main()